题意：给出几条可修的路，判断最多可以修几条互不交叉的路
http://blog.csdn.net/ice_crazy/article/details/7536332
#include<iostream>
#include<cstring>
#include<cstdio>
#include<cmath>
#include<queue>
#include<vector>
#include<stack>
#include<algorithm>
#include<set>
#include<map>
#include<deque> 
using namespace std;
#define INF 0x3f3f3f3f 

int n;
int road[500000];
int now[500000];
int ans[500000];
int find(int a,int l,int r){
	int mid = (l+r)>>1;
	while (l <= r){
		if (a==now[mid]) return mid;
		else {
			if (a > now[mid]) l = 1+mid;
			else r = mid-1;
			mid = (l+r)>>1;
		}
	}
	return l;
}
int main(){
	int x,y;
	int cas = 1;
	while (~scanf("%d",&n)){
		for (int i=0 ; i<n ; i++){
			scanf("%d%d",&x,&y);
			road[x] = y;
		}
		memset(now,INF,sizeof now);
		memset(ans,0,sizeof ans);
		now[1] = road[1];
		ans[1] = 1;
		for (int i=2 ; i<=n ; i++){
			int pos = find(road[i],1,n);
			now[pos] = road[i];
			ans[i] = pos;
		}
		int maxn = 0;
		for (int i=1 ; i<=n ; i++)
			maxn = max(maxn,ans[i]);
		if (maxn==1) printf("Case %d:\nMy king, at most 1 road can be built.\n\n",cas++);
		else printf("Case %d:\nMy king, at most %d roads can be built.\n\n",cas++,maxn);
	}
	return 0;
}

题意：给出两组数字，一一对应形成边，求相互之间两两相交的最大边数
http://blog.csdn.net/nealgavin/article/details/8794879
#include<iostream>
#include<cstdio>
using namespace std; 

int n,i,l,r,h,a,b[1000100],c[1000100],res;
int main() {
  scanf("%d",&n);
  for (i=0; i<n; i++) { scanf("%d",&a); c[a]=i+1; }
  b[0]=100000000;
  for (i=0; i<n; i++) {
    scanf("%d",&a);
    a=c[a]; l=0; r=i+1;
    while (l<r) {
      h=(l+r)/2;
      if (b[h]>a) l=h+1; else r=h;
    }
    b[r]=a;
    if (r>res) res=r;
  }
  printf("%d\n",res);
  return 0;
}